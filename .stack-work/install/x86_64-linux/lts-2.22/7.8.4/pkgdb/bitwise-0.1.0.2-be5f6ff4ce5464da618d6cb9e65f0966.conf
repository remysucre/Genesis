name: bitwise
version: 0.1.0.2
id: bitwise-0.1.0.2-be5f6ff4ce5464da618d6cb9e65f0966
license: BSD3
copyright: (c) 2012 Claude Heiland-Allen
maintainer: claude@mathr.co.uk
stability:
homepage: http://code.mathr.co.uk/bitwise
package-url:
synopsis: fast multi-dimensional unboxed bit packed Bool arrays
description: Unboxed multidimensional bit packed Bool arrays with fast aggregate
             operations based on lifting Bool operations to bitwise operations.
             .
             There are many other bit packed structures out there, but none met
             all of these requirements:
             .
             (1) unboxed bit packed Bool array,
             .
             (2) multi-dimensional indexing,
             .
             (3) fast (de)serialization, or interoperable with foreign code,
             .
             (4) fast aggregate operations (fold, map, zip).
             .
             Quick tour of the bitwise library:
             .
             [Data.Bits.Bitwise] Lift boolean operations on 'Bool' to bitwise
             operations on 'Data.Bits.Bits'.
             .
             [Data.Array.BitArray] Immutable bit arrays.
             .
             [Data.Array.BitArray.ST] Mutable bit arrays in 'Control.Monad.ST.ST'.
             .
             [Data.Array.BitArray.IO] Mutable bit arrays in 'IO'.
             .
             [Data.Array.BitArray.ByteString] (De)serialization.
             .
             [Codec.Image.PBM] Portable bitmap monochrome 2D image format.
             .
             Very rough performance benchmarks:
             .
             * immutable random access single bit reads:
             @BitArray ix@ is about 40% slower than @UArray ix Bool@,
             .
             * 'Control.Monad.ST.ST' mutable random access single bit reads:
             @STBitArray s ix@ is about the same as @STUArray s ix Bool@,
             .
             * immutable map @Bool -> Bool@:
             @BitArray ix@ is about 85x faster than @UArray ix Bool@,
             .
             * immutable zipWith @Bool -> Bool -> Bool@:
             @BitArray ix@ is about 1300x faster than @UArray ix Bool@.
category: Data, Data Structures, Bit Vectors
author: Claude Heiland-Allen
exposed: True
exposed-modules: Data.Bits.Bitwise Data.Array.BitArray
                 Data.Array.BitArray.IO Data.Array.BitArray.ST
                 Data.Array.BitArray.ByteString Codec.Image.PBM
hidden-modules: Data.Array.BitArray.Internal Compat
trusted: False
import-dirs: /home/remy/Genesis/.stack-work/install/x86_64-linux/lts-2.22/7.8.4/lib/x86_64-linux-ghc-7.8.4/bitwise-0.1.0.2
library-dirs: /home/remy/Genesis/.stack-work/install/x86_64-linux/lts-2.22/7.8.4/lib/x86_64-linux-ghc-7.8.4/bitwise-0.1.0.2
hs-libraries: HSbitwise-0.1.0.2
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: array-0.5.0.0-470385a50d2b78598af85cfe9d988e1b
         base-4.7.0.2-bfd89587617e381ae01b8dd7b6c7f1c1
         bytestring-0.10.4.0-d6f1d17d717e8652498cab8269a0acd5
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /home/remy/Genesis/.stack-work/install/x86_64-linux/lts-2.22/7.8.4/doc/bitwise-0.1.0.2/bitwise.haddock
haddock-html: /home/remy/Genesis/.stack-work/install/x86_64-linux/lts-2.22/7.8.4/doc/bitwise-0.1.0.2
