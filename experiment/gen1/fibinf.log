Preprocessing executable 'Save' for Genesis-0.1.0.0...
Running Save...
Basetime is: 9.05
001001101000100011: 1.878453038674033
11101100001001011011: 1.878453038674033
0001001001110110111: 1.878453038674033
0000101000001000101: 0.7635359116022099
11101100101101111: 1.878453038674033
gen0
0000101000001000101: 0.6853591160220994
0010111010001000111: 1.878453038674033
11101110101010011: 1.878453038674033
0000101000001000101: 0.7350828729281768
1011001001011110111: 0.1447513812154696
0000101000001000101: 0.7312154696132597
001001101000100011: 1.878453038674033
11101100001001011011: 1.878453038674033
gen1
0000101000001000101: 0.9077348066298342
0000101000001000101: 0.7370165745856353
1011001001011110111: 0.1516574585635359
1001101000011010101: 0.44364640883977896
10001010100011011: 1.878453038674033
1011001001011110111: 0.14088397790055246
0000101000001000101: 0.7218232044198893
0010111010001000111: 1.878453038674033
gen2
1011101001011100101: 0.14060773480662983
1010101001011100111: 0.14060773480662983
1011001001011110111: 0.13922651933701655
1011101000011110101: 0.4207182320441989
1101001001010111011: 1.878453038674033
1011001001011110111: 0.14088397790055246
1001101000011010101: 0.4223756906077348
0000101000001000101: 0.708011049723757
gen3
1011001001011110101: 0.13977900552486186
1011001001011110111: 0.13922651933701657
1010101001011110111: 0.1408839779005525
1011101001011100101: 0.14116022099447514
1011100001011110111: 0.1397790055248619
1011001001011110111: 0.14005524861878452
1011101001011100101: 0.14116022099447512
1010101001011100111: 0.14033149171270717
gen4
done evolving!
best entity (GA): 1110111101001001101
{-# LANGUAGE BangPatterns #-}
module Main (main) where
import Data.List
 
f :: Integer -> Integer
f !x = if x >= 0 then f (x + 1) else 0
fib1 0 _ b = b
fib1 !n !a b = fib1 (n - 1) b (a + b)
fiba = fib1 300000 0 1
 
inf :: Integer -> Integer
inf n = 0
inf1 = inf $ f 0
fib2 0 _ !b = b
fib2 n a !b = fib2 (n - 1) b (a + b)
fibb = fib2 300000 0 1
 
inf' :: Integer -> Integer
inf' n = 0
inf2 = inf' $ f 0
fib3 0 _ !b = b
fib3 !n !a !b = fib3 (n - 1) b (a + b)
fibc = fib3 300000 0 1
 
inf'' :: Integer -> Integer
inf'' n = 0
inf3 = inf'' $ f 0
fib4 0 _ !b = b
fib4 !n !a b = fib4 (n - 1) b (a + b)
fibd = fib4 300000 0 1
main = do putStrLn $ show (fiba + fibb + fibc + inf1 + inf2 + inf3)
